{"paragraphs":[{"title":"Date time analysis","text":"import java.time.LocalDate\r\nimport java.time.format.DateTimeFormatter\r\nimport java.time.LocalDateTime\r\n\r\nval getSeasonUDF = udf{(monthIndex: Int) => monthIndex match {\r\n                                          case 3 | 4 | 5 => \"Spring\" \r\n                                          case 6 | 7 | 8 => \"Summer\"\r\n                                          case 9 | 10 | 11 => \"Autumn\"\r\n                                          case 12 | 1 | 2 => \"Winter\"\r\n                                          case _ => \"Invalid\"\r\n                                        }};\r\n\r\n\r\n","user":"anonymous","dateUpdated":"2019-07-11T15:18:43+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala","title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import java.time.LocalDate\nimport java.time.format.DateTimeFormatter\nimport java.time.LocalDateTime\ngetSeasonUDF: org.apache.spark.sql.expressions.UserDefinedFunction = UserDefinedFunction(<function1>,StringType,Some(List(IntegerType)))\n"}]},"apps":[],"jobName":"paragraph_1562705471869_-59175454","id":"20190709-205111_597013639","dateCreated":"2019-07-09T20:51:11+0000","dateStarted":"2019-07-11T15:18:44+0000","dateFinished":"2019-07-11T15:18:44+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:7868"},{"title":"Merge 2 data sources without streaming","text":"import sqlContext.implicits._\r\nimport org.apache.spark.sql.Row\r\nimport org.apache.spark.sql.functions._\r\n\r\ndef GetPopularDestination(uri:String, fromDate:String, toDate:String): org.apache.spark.sql.DataFrame = \r\n{\r\n    \r\n    var bookingDF = GetBookingDataFrame(uri)\r\n    val airportDF = GetAirports()\r\n    \r\n    var tempDF = bookingDF\r\n      .join(airportDF, $\"originAirport\" === $\"iATA\")\r\n      .filter($\"country\" === \"netherlands\" && $\"operatingAirline\"===\"kl\" && $\"bookingStatus\"===\"confirmed\")\r\n      .select($\"nbPassengers\" as \"PassengerCnt\", $\"destinationAirport\" as \"DestinationAirport\", $\"arrivalDate\" as \"ArrivalDate\")\r\n      .join(airportDF, $\"DestinationAirport\" === $\"iATA\")\r\n    \r\n    //Convert utc to localtime & date filtering\r\n    val timeUdf = udf{(time: java.sql.Timestamp, utc: Long) => new java.sql.Timestamp(time.getTime + utc*60*60*1000)}\r\n    val actualDateDF = tempDF.withColumn(\"ArrivalDate\", timeUdf(tempDF(\"ArrivalDate\"), tempDF(\"timezone\").cast(\"Long\"))).drop(\"timezone\").drop(\"dst\").drop(\"tz\")\r\n                      .filter($\"ArrivalDate\" >= fromDate && $\"ArrivalDate\"<= toDate)\r\n    \r\n    //calculate day of week and season                  \r\n    val finalDF = actualDateDF.withColumn(\"DayOfWeek\", date_format(to_date(col(\"ArrivalDate\")), \"EEE\"))\r\n                         .withColumn(\"Season\", getSeasonUDF(date_format(to_date(col(\"ArrivalDate\")), \"M\").cast(\"Int\")))\r\n\r\n    finalDF.registerTempTable(\"FinalData\")\r\n    var data = spark.sql(\"SELECT country,season,DayOfWeek,sum(passengerCnt) NumberOfBookings FROM FinalData group by country,DayOfWeek,season order by sum(passengerCnt) desc\")\r\n    return data\r\n}\r\n","user":"anonymous","dateUpdated":"2019-07-11T15:18:52+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala","title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"warning: there was one deprecation warning; re-run with -deprecation for details\nimport sqlContext.implicits._\nimport org.apache.spark.sql.Row\nimport org.apache.spark.sql.functions._\nGetPopularDestination: (uri: String, fromDate: String, toDate: String)org.apache.spark.sql.DataFrame\n"}]},"apps":[],"jobName":"paragraph_1562705400653_86920488","id":"20190709-205000_2048788304","dateCreated":"2019-07-09T20:50:00+0000","dateStarted":"2019-07-11T15:18:52+0000","dateFinished":"2019-07-11T15:18:54+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:7869"},{"title":"Merge 2 data sources with streaming","text":"import sqlContext.implicits._\r\nimport org.apache.spark.sql.Row\r\nimport org.apache.spark.sql.functions._\r\n\r\ndef GetPopularDestinationWithStreaming(uri:String, fromDate:String, toDate:String): org.apache.spark.sql.DataFrame = \r\n{\r\n    \r\n    var bookingDF = GetBookingDataFrameStreaming(uri) \r\n    val airportDF = GetAirports()\r\n    \r\n    var tempDF = bookingDF\r\n      .join(airportDF, $\"originAirport\" === $\"iATA\")\r\n      .filter($\"country\" === \"netherlands\" && $\"operatingAirline\"===\"kl\" && $\"bookingStatus\"===\"confirmed\")\r\n      .select($\"nbPassengers\" as \"PassengerCnt\", $\"destinationAirport\" as \"DestinationAirport\", $\"arrivalDate\" as \"ArrivalDate\")\r\n      .join(airportDF, $\"DestinationAirport\" === $\"iATA\")\r\n    \r\n    //Convert utc to localtime & date filtering\r\n    val timeUdf = udf{(time: java.sql.Timestamp, utc: Long) => new java.sql.Timestamp(time.getTime + utc*60*60*1000)}\r\n    val actualDateDF = tempDF.withColumn(\"ArrivalDate\", timeUdf(tempDF(\"ArrivalDate\"), tempDF(\"timezone\").cast(\"Long\"))).drop(\"timezone\").drop(\"dst\").drop(\"tz\")\r\n                      .filter($\"ArrivalDate\" >= fromDate && $\"ArrivalDate\"<= toDate)\r\n    \r\n    //calculate day of week and season                  \r\n    val finalDF = actualDateDF.withColumn(\"DayOfWeek\", date_format(to_date(col(\"ArrivalDate\")), \"EEE\"))\r\n                         .withColumn(\"Season\", getSeasonUDF(date_format(to_date(col(\"ArrivalDate\")), \"M\").cast(\"Int\")))\r\n\r\n    finalDF.registerTempTable(\"FinalData\")\r\n    var data = spark.sql(\"SELECT country,season,DayOfWeek,sum(passengerCnt) NumberOfBookings FROM FinalData group by country,DayOfWeek,season order by sum(passengerCnt) desc\")\r\n    return data\r\n}","user":"anonymous","dateUpdated":"2019-07-11T14:38:48+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala","title":true},"settings":{"params":{},"forms":{}},"results":{"code":"ERROR","msg":[{"type":"TEXT","data":"<console>:65: error: not found: value GetBookingDataFrameStreaming\n           var bookingDF = GetBookingDataFrameStreaming(uri)\n                           ^\n"}]},"apps":[],"jobName":"paragraph_1562844128997_795656777","id":"20190711-112208_801227919","dateCreated":"2019-07-11T11:22:08+0000","dateStarted":"2019-07-11T14:38:49+0000","dateFinished":"2019-07-11T14:38:49+0000","status":"ERROR","progressUpdateIntervalMs":500,"$$hashKey":"object:7870"},{"title":"Get Final Result","text":"val actualDateDF = GetPopularDestination(\"hdfs:///user/maria_dev/KLM/booking.dat\", \"2018-01-03\", \"2019-05-05\")\r\n//val actualDateDF = GetPopularDestinationWithStreaming(\"hdfs:///user/maria_dev/KLM\", \"2018-01-01\", \"2019-12-20\")\r\nactualDateDF.show()\r\nactualDateDF.registerTempTable(\"actualDateDF\")","user":"anonymous","dateUpdated":"2019-07-11T15:19:02+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala","title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"warning: there was one deprecation warning; re-run with -deprecation for details\n+--------------------+------+---------+----------------+\n|             country|season|DayOfWeek|NumberOfBookings|\n+--------------------+------+---------+----------------+\n|       united states|Spring|      Mon|           563.0|\n|      united kingdom|Spring|      Sun|           186.0|\n|       united states|Spring|      Sun|           150.0|\n|             germany|Spring|      Mon|           110.0|\n|      united kingdom|Spring|      Mon|           107.0|\n|            portugal|Spring|      Wed|            99.0|\n|               china|Spring|      Mon|            98.0|\n|              france|Spring|      Mon|            93.0|\n|      united kingdom|Spring|      Sat|            79.0|\n|               italy|Spring|      Mon|            74.0|\n|               italy|Spring|      Wed|            70.0|\n|       united states|Spring|      Tue|            67.0|\n|           indonesia|Spring|      Wed|            66.0|\n|             austria|Spring|      Mon|            65.0|\n|      united kingdom|Spring|      Wed|            58.0|\n|      united kingdom|Spring|      Thu|            56.0|\n|      united kingdom|Spring|      Tue|            55.0|\n|      united kingdom|Spring|      Fri|            44.0|\n|united arab emirates|Spring|      Mon|            44.0|\n|             germany|Spring|      Sun|            40.0|\n+--------------------+------+---------+----------------+\nonly showing top 20 rows\n\nactualDateDF: org.apache.spark.sql.DataFrame = [country: string, season: string ... 2 more fields]\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://sandbox-hdp.hortonworks.com:4040/jobs/job?id=162","http://sandbox-hdp.hortonworks.com:4040/jobs/job?id=163"],"interpreterSettingId":"spark2"}},"apps":[],"jobName":"paragraph_1562786002617_-1645029430","id":"20190710-191322_160135711","dateCreated":"2019-07-10T19:13:22+0000","dateStarted":"2019-07-11T15:19:02+0000","dateFinished":"2019-07-11T15:19:10+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:7871"},{"title":"Update final data frame","text":"%sql\n\nSELECT country,season,DayOfWeek,sum(passengerCnt) NumberOfBookings FROM FinalData --where season = \"Autumn\"\ngroup by country,DayOfWeek,season\norder by sum(passengerCnt) desc  ","user":"anonymous","dateUpdated":"2019-07-11T15:19:29+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{"columns":[{"name":"country","visible":true,"width":"*","sort":{"direction":"asc","priority":0},"filters":[{}],"pinned":""},{"name":"season","visible":true,"width":"*","sort":{},"filters":[{}],"pinned":""},{"name":"DayOfWeek","visible":true,"width":"*","sort":{},"filters":[{}],"pinned":""},{"name":"NumberOfBookings","visible":true,"width":"*","sort":{},"filters":[{}],"pinned":""}],"scrollFocus":{},"selection":[],"grouping":{"grouping":[{"field":"country","groupPriority":0,"colName":"country"}],"aggregations":[],"rowExpandedStates":{"ghana":{"state":"collapsed","children":{}}}},"treeView":{},"pagination":{"paginationCurrentPage":1,"paginationPageSize":250}},"tableColumnTypeState":{"names":{"country":"string","season":"string","DayOfWeek":"string","NumberOfBookings":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false},"lineChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"}},"commonSetting":{},"keys":[{"name":"country","index":0,"aggr":"sum"}],"groups":[],"values":[{"name":"season","index":1,"aggr":"sum"}]},"helium":{}}},"editorSetting":{"language":"sql","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/sql","title":true,"tableHide":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"country\tseason\tDayOfWeek\tNumberOfBookings\nunited states\tSpring\tMon\t553.0\nunited kingdom\tSpring\tSun\t181.0\nunited states\tSpring\tSun\t129.0\ngermany\tSpring\tMon\t100.0\nchina\tSpring\tMon\t96.0\nportugal\tSpring\tWed\t96.0\nfrance\tSpring\tMon\t86.0\nunited kingdom\tSpring\tMon\t85.0\nitaly\tSpring\tMon\t72.0\nunited kingdom\tSpring\tSat\t69.0\nindonesia\tSpring\tWed\t66.0\naustria\tSpring\tMon\t64.0\nitaly\tSpring\tWed\t64.0\nunited states\tSpring\tTue\t62.0\nunited kingdom\tSpring\tThu\t45.0\nunited arab emirates\tSpring\tMon\t44.0\nunited kingdom\tSpring\tTue\t40.0\nchina\tSpring\tTue\t39.0\ngermany\tSpring\tSun\t35.0\nunited kingdom\tSummer\tWed\t33.0\ndenmark\tSpring\tMon\t31.0\nitaly\tSpring\tTue\t31.0\nsweden\tSpring\tMon\t29.0\nunited kingdom\tSpring\tFri\t29.0\ncanada\tSpring\tMon\t28.0\nunited kingdom\tSpring\tWed\t25.0\nthailand\tSpring\tMon\t25.0\nnorway\tSpring\tMon\t23.0\nmalaysia\tSpring\tTue\t22.0\nunited kingdom\tSummer\tMon\t22.0\nfrance\tSpring\tWed\t22.0\nunited states\tSummer\tSun\t21.0\nfrance\tSpring\tTue\t21.0\ngermany\tSummer\tThu\t20.0\ndenmark\tSpring\tSun\t20.0\ngermany\tSpring\tTue\t18.0\ngermany\tSpring\tWed\t17.0\nspain\tSpring\tTue\t17.0\ngermany\tSpring\tThu\t17.0\nsweden\tSpring\tWed\t17.0\nportugal\tSpring\tMon\t16.0\nunited kingdom\tSummer\tTue\t15.0\nunited kingdom\tSummer\tFri\t15.0\nspain\tSpring\tThu\t15.0\nunited states\tSpring\tWed\t15.0\nspain\tSpring\tFri\t15.0\nperu\tSpring\tSat\t14.0\nitaly\tSpring\tSun\t14.0\ngermany\tSummer\tWed\t14.0\nmexico\tSummer\tFri\t14.0\nfrance\tSummer\tWed\t14.0\nswitzerland\tSpring\tFri\t13.0\npoland\tSpring\tMon\t13.0\nsweden\tSpring\tSun\t13.0\ngermany\tSummer\tFri\t13.0\nchina\tSpring\tSat\t13.0\nchina\tSpring\tFri\t12.0\ngermany\tSpring\tFri\t12.0\nspain\tSummer\tSat\t12.0\nchina\tSpring\tSun\t12.0\nunited kingdom\tSummer\tThu\t11.0\ndenmark\tSpring\tFri\t11.0\nspain\tSpring\tMon\t11.0\nunited states\tSummer\tWed\t11.0\nswitzerland\tSpring\tThu\t10.0\nunited kingdom\tSummer\tSat\t10.0\nfrance\tSpring\tFri\t10.0\ngermany\tSummer\tMon\t10.0\nunited states\tSpring\tFri\t10.0\nfrance\tSummer\tSat\t10.0\nchina\tSpring\tThu\t10.0\nunited states\tSummer\tMon\t10.0\ngermany\tSpring\tSat\t9.0\ngermany\tSummer\tTue\t9.0\nswitzerland\tSpring\tMon\t9.0\nfrance\tSummer\tThu\t9.0\njapan\tSpring\tTue\t8.0\nfrance\tSummer\tTue\t8.0\ngreece\tSpring\tMon\t8.0\nunited states\tSpring\tSat\t8.0\nsouth africa\tSpring\tTue\t8.0\npanama\tSpring\tMon\t8.0\nbrazil\tSpring\tMon\t8.0\nindia\tSpring\tThu\t8.0\ngreece\tSpring\tFri\t8.0\ncanada\tSpring\tSun\t8.0\nphilippines\tSpring\tTue\t8.0\nindia\tSpring\tMon\t8.0\npoland\tSummer\tMon\t8.0\nswitzerland\tSpring\tTue\t8.0\nfrance\tSpring\tSun\t8.0\npoland\tSummer\tSun\t8.0\nbrazil\tSummer\tMon\t8.0\nfrance\tSummer\tFri\t8.0\nrussia\tSpring\tThu\t8.0\nitaly\tSpring\tSat\t7.0\npoland\tSpring\tTue\t7.0\nireland\tSpring\tMon\t7.0\nunited states\tSpring\tThu\t7.0\nitaly\tSpring\tFri\t7.0\nsweden\tSummer\tThu\t7.0\nspain\tSpring\tSun\t7.0\nsweden\tSummer\tWed\t7.0\nromania\tSpring\tMon\t7.0\nchina\tSpring\tWed\t7.0\nfrance\tSummer\tMon\t7.0\ncanada\tSummer\tMon\t6.0\nfrance\tSpring\tThu\t6.0\nnorway\tSpring\tFri\t6.0\nfinland\tSummer\tSat\t6.0\ndenmark\tSpring\tWed\t6.0\nspain\tSpring\tWed\t6.0\nindia\tSpring\tFri\t6.0\nnigeria\tSummer\tTue\t6.0\nitaly\tSummer\tSat\t6.0\nunited kingdom\tSummer\tSun\t6.0\nbelgium\tSpring\tWed\t6.0\ndenmark\tSpring\tThu\t6.0\nphilippines\tSpring\tWed\t6.0\nitaly\tSummer\tSun\t6.0\nitaly\tSummer\tThu\t6.0\nfrance\tSpring\tSat\t6.0\nrussia\tSpring\tSun\t6.0\ntanzania\tSpring\tMon\t6.0\nchina\tSummer\tThu\t6.0\nchile\tSpring\tTue\t6.0\nchile\tSpring\tMon\t6.0\nnetherlands antilles\tSpring\tSun\t6.0\nitaly\tSummer\tWed\t6.0\nphilippines\tSpring\tFri\t6.0\nunited arab emirates\tSummer\tTue\t6.0\nperu\tSummer\tFri\t6.0\nrussia\tSpring\tWed\t6.0\nsweden\tSpring\tThu\t6.0\ncanada\tSpring\tThu\t5.0\ndenmark\tSummer\tMon\t5.0\nfrance\tSummer\tSun\t5.0\nnorway\tSpring\tSun\t5.0\nnorway\tSummer\tFri\t5.0\nnorway\tSummer\tMon\t5.0\nmexico\tSpring\tSun\t5.0\nireland\tSummer\tMon\t5.0\nspain\tSummer\tMon\t5.0\nsweden\tSpring\tTue\t5.0\nnorway\tSummer\tSat\t5.0\ngermany\tSummer\tSun\t5.0\nsingapore\tSpring\tWed\t5.0\nnorway\tSpring\tSat\t5.0\nswitzerland\tSummer\tFri\t5.0\nspain\tSpring\tSat\t5.0\nbelgium\tSpring\tMon\t5.0\nunited states\tSummer\tFri\t5.0\nunited arab emirates\tSpring\tTue\t5.0\ndenmark\tSpring\tSat\t5.0\nnorway\tSummer\tThu\t5.0\npoland\tSpring\tSun\t5.0\nkuwait\tSpring\tWed\t5.0\nunited states\tSummer\tTue\t5.0\nsweden\tSummer\tFri\t5.0\ncanada\tSummer\tThu\t4.0\nsweden\tSpring\tFri\t4.0\nswitzerland\tSpring\tSun\t4.0\nmexico\tSummer\tWed\t4.0\njapan\tSpring\tMon\t4.0\ngermany\tSummer\tSat\t4.0\nisrael\tSummer\tThu\t4.0\nrussia\tSpring\tFri\t4.0\nrussia\tSpring\tTue\t4.0\ncanada\tSpring\tWed\t4.0\njapan\tSummer\tTue\t4.0\nindia\tSpring\tTue\t4.0\njapan\tSpring\tWed\t4.0\nthailand\tSpring\tTue\t4.0\nitaly\tSummer\tFri\t4.0\nnorway\tSpring\tThu\t4.0\nchina\tSummer\tSun\t4.0\nfinland\tSpring\tFri\t4.0\nportugal\tSummer\tTue\t4.0\nnetherlands antilles\tSummer\tSun\t4.0\naustria\tSpring\tWed\t4.0\ntaiwan\tSummer\tWed\t4.0\nsingapore\tSpring\tSat\t4.0\nnorway\tSummer\tTue\t4.0\ndenmark\tSummer\tWed\t4.0\nportugal\tSpring\tSun\t4.0\nmalaysia\tSpring\tMon\t4.0\nsouth africa\tSpring\tWed\t4.0\nromania\tSpring\tTue\t4.0\nkuwait\tSummer\tThu\t4.0\nfinland\tSpring\tThu\t4.0\naruba\tSpring\tWed\t4.0\nindia\tSummer\tMon\t4.0\nswitzerland\tSummer\tSun\t4.0\nczech republic\tSummer\tWed\t4.0\nnamibia\tSummer\tMon\t4.0\nswitzerland\tSpring\tWed\t3.0\nphilippines\tSummer\tMon\t3.0\nitaly\tSummer\tTue\t3.0\nswitzerland\tSummer\tMon\t3.0\nindonesia\tSpring\tTue\t3.0\nportugal\tSpring\tThu\t3.0\njapan\tSpring\tThu\t3.0\nnorway\tSpring\tTue\t3.0\nnetherlands antilles\tSpring\tFri\t3.0\ncuba\tSpring\tSun\t3.0\nperu\tSpring\tTue\t3.0\nhungary\tSpring\tTue\t3.0\ndenmark\tSpring\tTue\t3.0\nsweden\tSummer\tTue\t3.0\nfinland\tSpring\tTue\t3.0\nfinland\tSummer\tMon\t3.0\naustria\tSpring\tTue\t3.0\nswitzerland\tSpring\tSat\t3.0\nspain\tSummer\tTue\t3.0\nhong kong\tSpring\tSun\t3.0\nrussia\tSummer\tTue\t3.0\nbahrain\tSpring\tWed\t3.0\nrussia\tSpring\tSat\t3.0\nargentina\tSpring\tTue\t3.0\nsouth africa\tSpring\tFri\t3.0\naustria\tSpring\tThu\t3.0\nsouth korea\tSpring\tTue\t3.0\necuador\tSpring\tSun\t3.0\nunited arab emirates\tSummer\tSat\t3.0\ncanada\tSpring\tSat\t3.0\nunited arab emirates\tSpring\tSat\t3.0\nsouth africa\tSpring\tSat\t3.0\nrwanda\tSpring\tSat\t3.0\nmauritius\tSpring\tSun\t3.0\nhong kong\tSummer\tSat\t3.0\ntaiwan\tSpring\tWed\t3.0\ndenmark\tSummer\tThu\t3.0\nargentina\tSpring\tThu\t3.0\nportugal\tSummer\tWed\t3.0\ntaiwan\tSpring\tTue\t3.0\nghana\tSpring\tWed\t3.0\ntanzania\tSummer\tWed\t3.0\nireland\tSummer\tSat\t3.0\naustria\tSpring\tSun\t3.0\nportugal\tSpring\tSat\t3.0\nsouth africa\tSpring\tMon\t3.0\noman\tSpring\tTue\t2.0\nczech republic\tSpring\tMon\t2.0\nunited states\tWinter\tFri\t2.0\nfinland\tSpring\tMon\t2.0\noman\tSummer\tThu\t2.0\nnetherlands antilles\tSpring\tWed\t2.0\ntaiwan\tSpring\tSat\t2.0\nbrazil\tSummer\tThu\t2.0\nnigeria\tSpring\tSat\t2.0\nfrance\tWinter\tThu\t2.0\njapan\tSummer\tThu\t2.0\ncanada\tSummer\tSun\t2.0\nsouth korea\tSummer\tMon\t2.0\nportugal\tSummer\tMon\t2.0\nczech republic\tSpring\tSat\t2.0\nmalaysia\tSpring\tSat\t2.0\nnigeria\tSpring\tTue\t2.0\njapan\tSummer\tMon\t2.0\nluxembourg\tSummer\tTue\t2.0\ncuba\tSpring\tTue\t2.0\nluxembourg\tSpring\tTue\t2.0\nswitzerland\tSummer\tWed\t2.0\nchina\tSummer\tWed\t2.0\nchina\tSummer\tFri\t2.0\naruba\tSummer\tWed\t2.0\nunited arab emirates\tSpring\tSun\t2.0\nbrazil\tSpring\tFri\t2.0\nsingapore\tSummer\tMon\t2.0\nportugal\tSpring\tFri\t2.0\nghana\tSpring\tFri\t2.0\nkenya\tSummer\tTue\t2.0\nspain\tSummer\tFri\t2.0\nchina\tSummer\tMon\t2.0\nsweden\tSummer\tSun\t2.0\nghana\tSummer\tSun\t2.0\nuganda\tSummer\tTue\t2.0\ndenmark\tSummer\tSat\t2.0\nbrazil\tSpring\tWed\t2.0\necuador\tSpring\tSat\t2.0\nghana\tSummer\tFri\t2.0\nspain\tSummer\tThu\t2.0\nsweden\tSpring\tSat\t2.0\nperu\tSummer\tWed\t2.0\nhungary\tSpring\tFri\t2.0\nspain\tSummer\tSun\t2.0\nmalaysia\tSpring\tSun\t2.0\nghana\tSpring\tThu\t2.0\nunited states\tSummer\tThu\t2.0\nbrazil\tSummer\tWed\t2.0\nchile\tSummer\tTue\t2.0\nnetherlands antilles\tSummer\tWed\t2.0\nswitzerland\tSummer\tSat\t2.0\nitaly\tSummer\tMon\t2.0\nbahrain\tSpring\tSun\t2.0\nhungary\tSpring\tThu\t2.0\nmexico\tSummer\tMon\t2.0\nluxembourg\tSpring\tThu\t2.0\nportugal\tSpring\tTue\t2.0\naustria\tSummer\tFri\t2.0\nbrazil\tSpring\tThu\t2.0\ncolombia\tSpring\tSun\t2.0\nunited states\tSummer\tSat\t2.0\nromania\tSpring\tSun\t2.0\nbelgium\tWinter\tWed\t2.0\nunited arab emirates\tSummer\tFri\t2.0\nfinland\tSummer\tSun\t2.0\nperu\tSpring\tSun\t2.0\ncanada\tSummer\tSat\t2.0\nnorway\tSpring\tWed\t2.0\nbahrain\tSummer\tSun\t2.0\ncroatia\tSpring\tThu\t1.0\nbrazil\tSummer\tTue\t1.0\noman\tSummer\tWed\t1.0\nbelgium\tSpring\tSat\t1.0\nsouth korea\tSpring\tWed\t1.0\nnigeria\tSpring\tWed\t1.0\nsouth africa\tSummer\tSun\t1.0\nghana\tSpring\tTue\t1.0\nsweden\tSummer\tSat\t1.0\nunited arab emirates\tSummer\tWed\t1.0\nisrael\tSpring\tWed\t1.0\nromania\tSpring\tThu\t1.0\nitaly\tSpring\tThu\t1.0\nthailand\tSpring\tSat\t1.0\nukraine\tSummer\tMon\t1.0\nghana\tSummer\tThu\t1.0\nrwanda\tSummer\tTue\t1.0\nbrazil\tSpring\tSun\t1.0\nperu\tSpring\tMon\t1.0\nbelgium\tSpring\tFri\t1.0\nindonesia\tSummer\tTue\t1.0\nrussia\tSummer\tMon\t1.0\nczech republic\tSummer\tFri\t1.0\nsingapore\tSummer\tWed\t1.0\nsweden\tSummer\tMon\t1.0\nchile\tSpring\tSun\t1.0\nghana\tAutumn\tThu\t1.0\nghana\tSummer\tWed\t1.0\nindia\tSpring\tWed\t1.0\nrwanda\tSpring\tMon\t1.0\nluxembourg\tSpring\tWed\t1.0\npoland\tSpring\tSat\t1.0\ncosta rica\tSpring\tSun\t1.0\nbelgium\tSummer\tTue\t1.0\nsaudi arabia\tSpring\tSun\t1.0\nkuwait\tSpring\tThu\t1.0\nkenya\tSummer\tMon\t1.0\naustria\tSummer\tWed\t1.0\nsaudi arabia\tSpring\tTue\t1.0\naustria\tSpring\tFri\t1.0\nfinland\tSummer\tTue\t1.0\ncroatia\tSummer\tWed\t1.0\nnigeria\tSummer\tFri\t1.0\nsuriname\tSpring\tSat\t1.0\nisrael\tSpring\tMon\t1.0\nsouth korea\tSummer\tTue\t1.0\nspain\tSummer\tWed\t1.0\nsingapore\tSpring\tTue\t1.0\ntanzania\tSpring\tFri\t1.0\nthailand\tSpring\tSun\t1.0\nnigeria\tSummer\tWed\t1.0\nkenya\tSpring\tSat\t1.0\nrussia\tSummer\tSat\t1.0\nromania\tSummer\tFri\t1.0\nhong kong\tSpring\tFri\t1.0\nkenya\tSummer\tThu\t1.0\npoland\tSummer\tWed\t1.0\npanama\tSummer\tMon\t1.0\ngreece\tSpring\tTue\t1.0\naustria\tSummer\tMon\t1.0\nireland\tSummer\tThu\t1.0\nkuwait\tSpring\tSun\t1.0\nswitzerland\tSummer\tTue\t1.0\nukraine\tSpring\tThu\t1.0\nbelgium\tSpring\tSun\t1.0\nhong kong\tSpring\tMon\t1.0\npoland\tSummer\tFri\t1.0\ncroatia\tSummer\tSat\t1.0\nireland\tSpring\tSun\t1.0\nperu\tWinter\tTue\t1.0\ncolombia\tSpring\tTue\t1.0\nargentina\tSpring\tSat\t1.0\nczech republic\tSummer\tMon\t1.0\npoland\tSummer\tSat\t1.0\nluxembourg\tSummer\tSun\t1.0\nswitzerland\tSummer\tThu\t1.0\necuador\tSummer\tTue\t1.0\ngreece\tSummer\tSat\t1.0\nmalaysia\tSummer\tSat\t1.0\nhong kong\tSpring\tSat\t1.0\nkenya\tSpring\tTue\t1.0\nmalaysia\tSummer\tSun\t1.0\nsouth africa\tSummer\tThu\t1.0\ntanzania\tSpring\tWed\t1.0\nhong kong\tSpring\tWed\t1.0\nangola\tSpring\tSat\t1.0\nuganda\tSummer\tFri\t1.0\nsingapore\tSummer\tSat\t1.0\njapan\tSummer\tFri\t1.0\nhungary\tSummer\tMon\t1.0\npoland\tSpring\tFri\t1.0\nireland\tSummer\tFri\t1.0\ncroatia\tSummer\tFri\t1.0\njapan\tSummer\tWed\t1.0\nluxembourg\tSummer\tMon\t1.0\nhungary\tSpring\tMon\t1.0\necuador\tSpring\tWed\t1.0\ncolombia\tSpring\tThu\t1.0\ncanada\tSpring\tFri\t1.0\ntaiwan\tSpring\tThu\t1.0\nsouth africa\tSummer\tWed\t1.0\nnetherlands antilles\tSpring\tSat\t1.0\n"},{"type":"TEXT","data":""}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://sandbox-hdp.hortonworks.com:4040/jobs/job?id=159","http://sandbox-hdp.hortonworks.com:4040/jobs/job?id=160","http://sandbox-hdp.hortonworks.com:4040/jobs/job?id=161"],"interpreterSettingId":"spark2"}},"apps":[],"jobName":"paragraph_1562705496738_551720333","id":"20190709-205136_495789949","dateCreated":"2019-07-09T20:51:36+0000","dateStarted":"2019-07-11T15:12:10+0000","dateFinished":"2019-07-11T15:12:14+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:7872"},{"title":"Pivot result based on season","text":"\r\nval aggexpr = expr(\"sum(NumberOfBookings) as NumberOfBookings\")\r\nval aggexprFinal = expr(\"Autumn + Winter+ Spring + Summer as NumberOfBookings\")\r\n\r\nval sourceTable = actualDateDF.groupBy($\"country\", $\"season\").agg(aggexpr)\r\n//sourceTable.show()\r\n\r\nval seasons = Seq(\"Autumn\", \"Winter\", \"Spring\", \"Summer\")\r\nval pivotDF = sourceTable.groupBy(\"country\").pivot(\"season\", seasons).agg(aggexpr)\r\nvar withoutNull = pivotDF.na.fill(0, seasons)\r\n\r\nval pivotFinalSeason = withoutNull.groupBy($\"country\", $\"Autumn\", $\"Winter\", $\"Spring\", $\"Summer\").agg(aggexprFinal).orderBy($\"NumberOfBookings\".desc)\r\npivotFinalSeason.show()","user":"anonymous","dateUpdated":"2019-07-11T15:30:40+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala","title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+--------------------+------+------+------+------+----------------+\n|             country|Autumn|Winter|Spring|Summer|NumberOfBookings|\n+--------------------+------+------+------+------+----------------+\n|       united states|   2.0|   0.0| 840.0|   0.0|           842.0|\n|      united kingdom|   0.0|   1.0| 585.0|   0.0|           586.0|\n|             germany|   0.0|   0.0| 283.0|   0.0|           283.0|\n|               italy|   0.0|   3.0| 226.0|   0.0|           229.0|\n|              france|   1.0|   2.0| 219.0|   0.0|           222.0|\n|               china|   0.0|   1.0| 204.0|   0.0|           205.0|\n|            portugal|   0.0|   0.0| 135.0|   0.0|           135.0|\n|               spain|   0.0|   0.0| 103.0|   0.0|           103.0|\n|              sweden|   0.0|   3.0|  99.0|   0.0|           102.0|\n|             denmark|   0.0|   0.0|  96.0|   0.0|            96.0|\n|             austria|   0.0|   0.0|  82.0|   0.0|            82.0|\n|              norway|   0.0|   0.0|  72.0|   0.0|            72.0|\n|           indonesia|   0.0|   0.0|  70.0|   0.0|            70.0|\n|         switzerland|   0.0|   0.0|  68.0|   0.0|            68.0|\n|united arab emirates|   0.0|   0.0|  66.0|   0.0|            66.0|\n|              canada|   0.0|   3.0|  60.0|   0.0|            63.0|\n|              poland|   0.0|   0.0|  46.0|   0.0|            46.0|\n|              russia|   0.0|   0.0|  36.0|   0.0|            36.0|\n|            malaysia|   0.0|   0.0|  32.0|   0.0|            32.0|\n|               india|   0.0|  11.0|  20.0|   0.0|            31.0|\n+--------------------+------+------+------+------+----------------+\nonly showing top 20 rows\n\naggexpr: org.apache.spark.sql.Column = sum(NumberOfBookings) AS `NumberOfBookings`\naggexprFinal: org.apache.spark.sql.Column = (((Autumn + Winter) + Spring) + Summer) AS `NumberOfBookings`\nsourceTable: org.apache.spark.sql.DataFrame = [country: string, season: string ... 1 more field]\nseasons: Seq[String] = List(Autumn, Winter, Spring, Summer)\npivotDF: org.apache.spark.sql.DataFrame = [country: string, Autumn: double ... 3 more fields]\nwithoutNull: org.apache.spark.sql.DataFrame = [country: string, Autumn: double ... 3 more fields]\npivotFinalSeason: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [country: string, Autumn: double ... 4 more fields]\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://sandbox-hdp.hortonworks.com:4040/jobs/job?id=172","http://sandbox-hdp.hortonworks.com:4040/jobs/job?id=173","http://sandbox-hdp.hortonworks.com:4040/jobs/job?id=174","http://sandbox-hdp.hortonworks.com:4040/jobs/job?id=175"],"interpreterSettingId":"spark2"}},"apps":[],"jobName":"paragraph_1562830123674_-1124214299","id":"20190711-072843_589963149","dateCreated":"2019-07-11T07:28:43+0000","dateStarted":"2019-07-11T15:30:41+0000","dateFinished":"2019-07-11T15:30:55+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:7873"},{"title":"Pivot result based on weak","text":"\r\nimport org.apache.spark.sql.DataFrameNaFunctions\r\n\r\nval aggexpr = expr(\"sum(NumberOfBookings) as NumberOfBookings\")\r\nval aggexprFinal = expr(\"Sat+ Sun+ Mon+ Tue+ Wed+ Thu+ Fri as NumberOfBookings\")\r\n\r\nval sourceTable = actualDateDF.groupBy($\"country\", $\"DayOfWeek\").agg(aggexpr)\r\n//sourceTable.show()\r\n\r\nval days = Seq(\"Sat\", \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\")\r\n//val pivotDsF = sourceTable.groupBy(\"country\",\"NumberOfBookings\").pivot(\"DayOfWeek\", days).sum(\"NumberOfBookings\").orderBy($\"NumberOfBookings\".desc)\r\n//pivotDsF.show()\r\n\r\nval pivotDF = sourceTable.groupBy(\"country\").pivot(\"DayOfWeek\", days).agg(aggexpr)\r\nvar withoutNull = pivotDF.na.fill(0, days)\r\n\r\nval pivotFinalWeek = withoutNull.groupBy($\"country\", $\"Sat\", $\"Sun\", $\"Mon\", $\"Tue\", $\"Wed\", $\"Thu\", $\"Fri\").agg(aggexprFinal).orderBy($\"NumberOfBookings\".desc)\r\npivotFinalWeek.show()\r\n\r\n\r\n","user":"anonymous","dateUpdated":"2019-07-11T15:33:09+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala","title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+--------------------+----+-----+-----+----+----+----+----+----------------+\n|             country| Sat|  Sun|  Mon| Tue| Wed| Thu| Fri|NumberOfBookings|\n+--------------------+----+-----+-----+----+----+----+----+----------------+\n|       united states|10.0|150.0|563.0|67.0|26.0| 9.0|17.0|           842.0|\n|      united kingdom|79.0|187.0|107.0|55.0|58.0|56.0|44.0|           586.0|\n|             germany|13.0| 40.0|110.0|27.0|31.0|37.0|25.0|           283.0|\n|               italy|13.0| 20.0| 74.0|34.0|70.0| 7.0|11.0|           229.0|\n|              france|16.0| 13.0| 93.0|29.0|36.0|17.0|18.0|           222.0|\n|               china|13.0| 16.0| 98.0|39.0| 9.0|16.0|14.0|           205.0|\n|            portugal| 3.0|  4.0| 18.0| 6.0|99.0| 3.0| 2.0|           135.0|\n|               spain|17.0|  9.0| 16.0|20.0| 7.0|17.0|17.0|           103.0|\n|              sweden| 3.0| 15.0| 30.0| 8.0|24.0|13.0| 9.0|           102.0|\n|             denmark| 7.0| 20.0| 36.0| 3.0|10.0| 9.0|11.0|            96.0|\n|             austria| 0.0|  3.0| 65.0| 3.0| 5.0| 3.0| 3.0|            82.0|\n|              norway|10.0|  5.0| 28.0| 7.0| 2.0| 9.0|11.0|            72.0|\n|           indonesia| 0.0|  0.0|  0.0| 4.0|66.0| 0.0| 0.0|            70.0|\n|         switzerland| 5.0|  8.0| 12.0| 9.0| 5.0|11.0|18.0|            68.0|\n|united arab emirates| 6.0|  2.0| 44.0|11.0| 1.0| 0.0| 2.0|            66.0|\n|              canada| 5.0| 10.0| 34.0| 0.0| 4.0| 9.0| 1.0|            63.0|\n|              poland| 2.0| 13.0| 21.0| 7.0| 1.0| 0.0| 2.0|            46.0|\n|              russia| 4.0|  6.0|  1.0| 7.0| 6.0| 8.0| 4.0|            36.0|\n|            malaysia| 3.0|  3.0|  4.0|22.0| 0.0| 0.0| 0.0|            32.0|\n|            thailand| 1.0|  1.0| 25.0| 4.0| 0.0| 0.0| 0.0|            31.0|\n+--------------------+----+-----+-----+----+----+----+----+----------------+\nonly showing top 20 rows\n\nimport org.apache.spark.sql.DataFrameNaFunctions\naggexpr: org.apache.spark.sql.Column = sum(NumberOfBookings) AS `NumberOfBookings`\naggexprFinal: org.apache.spark.sql.Column = ((((((Sat + Sun) + Mon) + Tue) + Wed) + Thu) + Fri) AS `NumberOfBookings`\nsourceTable: org.apache.spark.sql.DataFrame = [country: string, DayOfWeek: string ... 1 more field]\ndays: Seq[String] = List(Sat, Sun, Mon, Tue, Wed, Thu, Fri)\npivotDF: org.apache.spark.sql.DataFrame = [country: string, Sat: double ... 6 more fields]\nwithoutNull: org.apache.spark.sql.DataFrame = [country: string, Sat: double ... 6 more fields]\npivotFinalWeek: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [country: string, Sat: double ... 7 more fields]\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://sandbox-hdp.hortonworks.com:4040/jobs/job?id=176","http://sandbox-hdp.hortonworks.com:4040/jobs/job?id=177","http://sandbox-hdp.hortonworks.com:4040/jobs/job?id=178","http://sandbox-hdp.hortonworks.com:4040/jobs/job?id=179"],"interpreterSettingId":"spark2"}},"apps":[],"jobName":"paragraph_1562834091684_-709463658","id":"20190711-083451_405351848","dateCreated":"2019-07-11T08:34:51+0000","dateStarted":"2019-07-11T15:33:09+0000","dateFinished":"2019-07-11T15:33:19+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:7874"},{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala","title":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1562856031225_-508878183","id":"20190711-144031_1928033832","dateCreated":"2019-07-11T14:40:31+0000","status":"RUNNING","progressUpdateIntervalMs":500,"$$hashKey":"object:7875","dateUpdated":"2019-07-11T15:52:41+0000","dateFinished":"2019-07-11T15:46:59+0000","dateStarted":"2019-07-11T15:52:42+0000","errorMessage":"","title":"Pivot result based on week and season","runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://sandbox-hdp.hortonworks.com:4040/jobs/job?id=234","http://sandbox-hdp.hortonworks.com:4040/jobs/job?id=235","http://sandbox-hdp.hortonworks.com:4040/jobs/job?id=236","http://sandbox-hdp.hortonworks.com:4040/jobs/job?id=237","http://sandbox-hdp.hortonworks.com:4040/jobs/job?id=238","http://sandbox-hdp.hortonworks.com:4040/jobs/job?id=239"],"interpreterSettingId":"spark2"}},"text":"\n var pivotFinal = pivotFinalWeek\n      .join(pivotFinalSeason, pivotFinalSeason(\"country\")=== pivotFinalWeek(\"country\")).drop(pivotFinalWeek(\"country\"))\n      .drop(pivotFinalWeek(\"NumberOfBookings\")).orderBy(pivotFinalSeason(\"NumberOfBookings\").desc)\n \n\n pivotFinal.show()"},{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1562859237024_368998354","id":"20190711-153357_1372433046","dateCreated":"2019-07-11T15:33:57+0000","status":"READY","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:11286"}],"name":"KLM/Analysis","id":"2EGFS2JZW","noteParams":{},"noteForms":{},"angularObjects":{"spark2:shared_process":[]},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}