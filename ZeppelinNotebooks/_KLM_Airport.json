{"paragraphs":[{"title":"Airports Data Processing","text":"//replace null with empty string, remove double quotations from cells, and convert values to lowercase for easier comparison later on\r\ndef checkNull( s:String ) : String = {\r\n     if (s == null) \r\n        return \"\" \r\n    else \r\n        return s.replaceAll(\"\\\"\",\"\").toLowerCase\r\n   }\r\n   \r\n","user":"anonymous","dateUpdated":"2019-07-11T14:28:36+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1562851572480_1383854823","id":"20190709-202402_993431101","dateCreated":"2019-07-11T13:26:12+0000","dateStarted":"2019-07-11T14:28:37+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:102","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"checkNull: (s: String)String\n"}]},"dateFinished":"2019-07-11T14:37:08+0000"},{"title":"Create DataFrame for airports","text":"final case class Airport(country: String, iATA: String, timezone: String, ftype: String) \r\n\r\ndef GetAirports() : org.apache.spark.sql.DataFrame = {\r\n//Create RDD\r\nval input = sc.textFile(\"hdfs:///user/maria_dev/KLM/airports.dat\")\r\n                .map(a => {val fields = a.split(\",\"); \r\n                Airport(//checkNull(fields(2).toString), \r\n                        checkNull(fields(3).toString), \r\n                        checkNull(fields(4).toString), \r\n                        checkNull(fields(9).toString), \r\n                        checkNull(fields(12).toString) )})\r\n\r\n   return spark.createDataFrame(input.filter(x=> x.ftype == \"airport\")).drop(\"ftype\").cache()\r\n\r\n}","user":"anonymous","dateUpdated":"2019-07-11T14:37:46+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"warning: there was one unchecked warning; re-run with -unchecked for details\ndefined class Airport\nGetAirports: ()org.apache.spark.sql.DataFrame\n"}]},"apps":[],"jobName":"paragraph_1562851572483_-1628344413","id":"20190709-203539_1290654018","dateCreated":"2019-07-11T13:26:12+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:103","dateFinished":"2019-07-11T14:37:48+0000","dateStarted":"2019-07-11T14:37:47+0000"},{"title":"Airport table in SparkSQL","text":"val aDF = GetAirports()\n\n//aDF.printSchema()\n//aDF.take(3).foreach(println)\n\n//val topContries = aDF.groupBy(\"country\").count().orderBy(desc(\"count\"))\n//topContries.show()\n\naDF.registerTempTable(\"airports\")","user":"anonymous","dateUpdated":"2019-07-11T14:37:50+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"warning: there was one deprecation warning; re-run with -deprecation for details\naDF: org.apache.spark.sql.DataFrame = [country: string, iATA: string ... 1 more field]\n"}]},"apps":[],"jobName":"paragraph_1562851572483_-1572271583","id":"20190709-203533_1604291753","dateCreated":"2019-07-11T13:26:12+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:104","dateFinished":"2019-07-11T14:37:51+0000","dateStarted":"2019-07-11T14:37:50+0000"},{"text":"%sql\n\nSELECT * FROM airports LIMIT 10","user":"anonymous","dateUpdated":"2019-07-11T14:37:24+0000","config":{"editorSetting":{"language":"sql","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/sql","fontSize":9,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"country":"string","iATA":"string","timezone":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"country\tiATA\ttimezone\npapua new guinea\tgka\t10\npapua new guinea\tmag\t10\npapua new guinea\thgu\t10\npapua new guinea\tlae\t10\npapua new guinea\tpom\t10\npapua new guinea\twwk\t10\ngreenland\tuak\t-3\ngreenland\tgoh\t-3\ngreenland\tsfj\t-3\ngreenland\tthu\t-4\n"},{"type":"TEXT","data":""}]},"apps":[],"jobName":"paragraph_1562851572483_-1868252475","id":"20190709-202438_158031247","dateCreated":"2019-07-11T13:26:12+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:105","dateFinished":"2019-07-11T14:37:23+0000","dateStarted":"2019-07-11T14:37:17+0000","runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://sandbox-hdp.hortonworks.com:4040/jobs/job?id=0"],"interpreterSettingId":"spark2"}}},{"text":"\n","user":"anonymous","dateUpdated":"2019-07-11T14:37:24+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1562851572483_622343070","id":"20190710-185810_1286305881","dateCreated":"2019-07-11T13:26:12+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:106"}],"name":"/KLM/Airport","id":"2EG55Z6QV","noteParams":{},"noteForms":{},"angularObjects":{"spark2:shared_process":[]},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}